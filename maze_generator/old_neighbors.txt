self.index = grid.index(self)
		self.neighbors = []

		# up
		if self.index > maze_width and self.index - (distance * maze_width) > 0:
			if type(grid[self.index - (distance * maze_width)]) == Cell and not grid[self.index - (distance * maze_width)].visited:
				self.neighbors.append(grid[self.index - (distance * maze_width)])

		# down
		if self.index < len(grid) - distance * maze_width:
			if type(grid[self.index + (distance * maze_width)]) == Cell and not grid[self.index + (distance * maze_width)].visited:
				self.neighbors.append(grid[self.index + (distance * maze_width)])

		# left
		if (self.index % maze_width) - distance < maze_width:
			if type(grid[self.index - distance]) == Cell and not grid[self.index - distance].visited:
				self.neighbors.append(grid[self.index - distance])
		# right
		if (self.index % maze_width) + distance < maze_width:
			if type(grid[self.index + distance]) == Cell and not grid[self.index + distance].visited:
				self.neighbors.append(grid[self.index + distance])

		if len(self.neighbors) > 0:
			return self.neighbors
		return False